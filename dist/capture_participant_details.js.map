{"version":3,"sources":["src/capture_participant_details.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,CAAC,OAAO,EAAE,mBAAmB,CAAC,EAAE,UAAS,KAAK,EAAE,WAAW,EAAC;AAC/D,WAAO,UAAS,QAAQ,EAAC;AACrB,YAAI,mBAAmB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AACxC,wBAAY,EAAE,sBAAS,KAAK,EAAC;AACzB,oBAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC;aACxD;AACD,kBAAM,EAAE,kBAAU;AACf,oBAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;AAC3B,oBAAG,GAAG,EAAC;AACF,yBAAK,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;AACjE,wBAAI,iBAAiB,GAAG,IAAI,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;AACpE,qCAAiB,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAClC,0BAAM,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;AACzC,0BAAM,CAAC,GAAG,CAAC,OAAO,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;AACtD,4BAAQ,EAAE,CAAC;iBACf,MAAM;AACF,yBAAK,CAAC,qEAAqE,CAAC,CAAC;iBACjF;aACH;AACD,kBAAM,EAAE,kBAAU;AACd,uBAAO;;sBAAK,EAAE,EAAC,SAAS,EAAC,SAAS,EAAC,iBAAiB;oBAChD;;0BAAK,SAAS,EAAC,KAAK;wBAChB;;8BAAK,SAAS,EAAC,0BAA0B;4BACrC;;kCAAK,SAAS,EAAC,KAAK;gCAChB;;;;iCAAwB;gCACxB;;;;iCAA4M;6BAC1M;4BACN;;kCAAK,SAAS,EAAC,KAAK,EAAC,KAAK,EAAE,EAAC,YAAY,EAAC,MAAM,EAAC,AAAC;gCAC9C;;sCAAK,SAAS,EAAC,YAAY;oCACrB;;0CAAO,SAAS,EAAC,wBAAwB,EAAC,OAAO,EAAC,mBAAmB;;qCAA0B;oCAC7F;;0CAAK,SAAS,EAAC,UAAU;wCACnB,+BAAO,EAAE,EAAC,mBAAmB,EAAC,IAAI,EAAC,mBAAmB,EAAC,IAAI,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO,EAAC,SAAS,EAAC,uBAAuB,EAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,GAAG,EAAC,aAAU,mBAAmB,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,AAAC,GAAG;wCACjN;;8CAAM,SAAS,EAAC,YAAY;;yCAAoF;qCACnH;iCACP;gCAER;;sCAAQ,EAAE,EAAC,2BAA2B,EAAC,SAAS,EAAC,kBAAkB,EAAC,OAAO,EAAE,IAAI,CAAC,MAAM,AAAC;;iCAA+E;6BACpK;yBACF;qBACN;iBACJ,CAAA;aACT;SACJ,CAAC,CAAC;;AAEH,aAAK,CAAC,MAAM,CACR,oBAAC,mBAAmB,OAAG,EACvB,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CACrC,CAAC;KACL,CAAC;CACL,CAAC,CAAC","file":"src/capture_participant_details.js","sourcesContent":["define([\"react\", \"dist/local_object\"], function(React, LocalObject){\n    return function(callback){\n        var CaptureParticipants = React.createClass({\n            handleChange: function(event){\n                this.setState({value: parseInt(event.target.value)});\n            },\n            submit: function(){\n               var val = this.state.value;\n               if(val){\n                    React.unmountComponentAtNode(document.getElementById('content'));\n                    var participantNumber = new LocalObject(\"participant_number\", true);\n                    participantNumber.set(\"val\", val);\n                    window.log.meta.participant_number = val;\n                    window.log.saveLog(\"entered participant number\", val);\n                    callback();\n               } else {\n                    alert(\"Participant numbers are only integers. Please enter a valid integer\");\n               }\n            },\n            render: function(){\n                return <div id=\"capture\" className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-xs-8 col-xs-offset-2\">\n                            <div className=\"row\">\n                                <legend>Welcome</legend>\n                                <div>Thank you for participating in our evaluation of rotation controllers. To begin, please enter your participant number below. Please only do this once you have signed the informed consent form. </div>\n                            </div>\n                            <div className=\"row\" style={{\"paddingTop\":\"10px\"}}>\n                                <div className=\"form-group\">\n                                      <label className=\"col-md-4 control-label\" htmlFor=\"participant_input\">Particpant Number</label>  \n                                        <div className=\"col-md-5\">\n                                              <input id=\"participant_input\" name=\"participant_input\" type=\"text\" placeholder=\"12345\" className=\"form-control input-md\" min=\"0\" step=\"1\" data-bind=\"value:replyNumber\" required=\"\" onChange={this.handleChange} />\n                                                <span className=\"help-block\">The participant number given to you, attached to your informed consent form.</span>  \n                                       </div>\n                                </div>\n\n                              <button id=\"submit-participant-number\" className=\"btn  btn-default\" onClick={this.submit}>I confirm I have signed the informed consent form for this experiment</button>\n                            </div>\n                          </div>\n                    </div>\n                </div>\n            }\n        });\n\n        React.render(\n            <CaptureParticipants />,\n            document.getElementById(\"content\")\n        );\n    };\n});\n"]}