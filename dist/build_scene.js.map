{"version":3,"sources":["src/build_scene.js"],"names":[],"mappings":"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","file":"src/build_scene.js","sourcesContent":["define([\"three\"], function(THREE){\n    return {new: function(){\n        return {\n            // Initialize a scene\n            init: function(view, controller){\n                // Instance variables\n                this.controller = controller;\n\n                // Initialise the required elements\n                this.changeView(view);\n                this.scene = new THREE.Scene();\n                this.camera = new THREE.PerspectiveCamera( 75, 4/3, 0.1, 1000 ); \n                this.light = new THREE.DirectionalLight( 0xffffff, 1);\n\n                var light = new THREE.AmbientLight( 0x404040 ); // soft white light\n                this.scene.add( light );\n\n                // Initialise the environment using the controller\n                this.controller.init(this.scene, this.camera, this.light);\n            },\n\n            // Update instance variables\n            changeView: function(view){\n                this.view = view;\n            },\n\n            updateSize: function(rendererWidth, rendererHeight){\n                var size = [this.view.width * rendererWidth, this.view.height * rendererHeight];\n                var width = size[0];\n                var height = size[1];\n\n                this.camera.aspect = width/height;\n                this.camera.updateProjectionMatrix();\n\n                return size;\n            },\n\n            // Control what is rendered\n            render: function(renderer, rendererWidth, rendererHeight){\n                var size = this.updateSize(rendererWidth, rendererHeight),\n                    width = size[0],\n                    height = size[1],\n                    left = rendererWidth * this.view.left,\n                    bottom = rendererHeight * this.view.bottom,\n                    dimensions = {\n                        view: this.view,\n                        renderer: {\n                            width: rendererWidth,\n                            height: rendererHeight,\n                        },\n                        scene: {\n                            width: width,\n                            height: height,\n                            left: left,\n                            bottom: bottom,\n                        },\n                    };\n                this.controller.render(this.scene, this.camera, dimensions);\n                this.scene.updateMatrixWorld(true);\n                renderer.setClearColor(this.view.background);\n                renderer.setViewport( left, bottom, width, height );\n                renderer.setScissor( left, bottom, width, height );\n                renderer.enableScissorTest ( true );\n                renderer.render(this.scene, this.camera);\n            },\n        };\n    }};\n});\n"]}