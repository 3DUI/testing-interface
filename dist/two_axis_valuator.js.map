{"version":3,"sources":["src/two_axis_valuator.js"],"names":[],"mappings":"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","file":"src/two_axis_valuator.js","sourcesContent":["define([\"three\", \"dist/rotation_helper\"], function(THREE, RotationHelper){\n    return {new: function(model, scene, camera){\n        var Controller = {\n            model: model,\n            camera: camera,\n            scene: scene,\n            rotationGuideWidth: 2,\n            radius: 4, // TODO: make this configurable\n            rotationGuideColour: 0xffff00,\n            rotationGuideColourRotating: 0xffffff,\n            rotating: false,\n            init: function(model, scene, camera){\n                this.buildRotationGuides(scene);\n            },\n\n            buildRotationGuides: function(scene){\n                    var segments = 64,\n                    geometry = new THREE.CircleGeometry(this.radius, segments);\n                geometry.vertices.shift(); // remove center\n\n                this.rotationGuide = new THREE.Line(geometry, new THREE.LineBasicMaterial({\n                        color: this.rotationGuideColour,\n                        linewidth: this.rotationGuideWidth}));\n                scene.add(this.rotationGuide);\n            },\n\n            rotateByAxis: function(realPos, axis){\n                var rotationVec = RotationHelper.axes[axis],\n                    angle = RotationHelper.sliderAngle(realPos, this.initialMouseReal, axis, this.radius);\n                RotationHelper.rotateByAxisAngle(this.model, rotationVec, angle);\n            },\n\n            rotateByAxisSimple: function(realPos, axis){\n                var rotationVec = RotationHelper.axes[axis],\n                    angle = RotationHelper.sliderAngle(realPos, this.initialMouseReal, axis, this.radius);\n                this.model.rotation[axis] += angle; \n            },\n\n            updateRotation: function(mouseX, mouseY, dim){\n                var realPos = RotationHelper.getRealPosition(mouseX, mouseY, dim, this.camera);\n                if(realPos.length() >= this.radius){\n                    this.rotateByAxis(realPos, \"z\");\n                } else {\n                    this.rotateByAxis(realPos, \"y\");\n                    this.rotateByAxis(realPos, \"x\");\n                }\n                this.initialMouseReal = realPos;\n            },\n\n            cursorType: function(mouseX, mouseY, dim){\n                if(this.rotating){\n                    return \"grabbing\";\n                } else {\n                    return \"grab\";\n                }\n            },\n\n            updateCursor: function(mouseX, mouseY, dim){\n            },\n\n            startRotation: function(initialMousePos, dim){\n                this.rotating = true;\n                this.initialMouseReal = RotationHelper.getRealPosition(initialMousePos[0], initialMousePos[1], dim, this.camera);\n                this.rotationGuide.material.color.setHex(this.rotationGuideColourRotating);\n            },\n\n            endRotation: function(){\n                this.rotating = false;\n                this.rotationGuide.material.color.setHex(this.rotationGuideColourRotating);\n                this.rotationGuide.material.color.setHex(this.rotationGuideColour);\n            },\n        };\n        Controller.init(model, scene, camera);\n        return Controller;\n    }};\n});\n"]}