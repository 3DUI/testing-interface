{"version":3,"sources":["src/arcball.js"],"names":[],"mappings":"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","file":"src/arcball.js","sourcesContent":["define([\"three\", \"dist/mouse_to_world\", \"dist/rotation_helper\"], function(THREE, MouseToWorld, RotationHelper){\n    return {new: function(model, scene, camera){\n        var Controller = {\n            unhiddenOpacity: 0.3,\n            rotatingOpacity: 0.5,\n            radius: 4, // TODO: make this configurable \n            displayRadius: 5, \n            rotating: false,\n\n            init: function(model, scene, camera){\n                this.model = model;\n                this.camera = camera;\n                this.rotationGuide = this.buildRotationGuide();\n                scene.add(this.rotationGuide);\n            },\n\n            /**\n             * Create the sphere around the model\n             */\n            buildRotationGuide: function(){\n                var sphereGeom =  new THREE.SphereGeometry(this.radius, 64, 64),\n                    wireframeMaterial = new THREE.MeshBasicMaterial({\n                        color: 0xd3d3d3,\n                        opacity: this.unhiddenOpacity,\n                        transparent: true});\n                return new THREE.Mesh(sphereGeom.clone(), wireframeMaterial);\n            },\n\n            updateRotation: function(mouseX, mouseY, dim){\n                var realPos = RotationHelper.getRealPosition(mouseX, mouseY, dim, this.camera);\n                if(this.shouldRotate(realPos)){ // disable rotating on z from the outside\n                    var rotate = RotationHelper.rotateQuaternion(\n                        RotationHelper.mapToSphere(this.initialMouse.x, this.initialMouse.y, this.radius),\n                        RotationHelper.mapToSphere(realPos.x, realPos.y, this.radius));\n\n                    RotationHelper.rotateModelByQuaternion(this.model, rotate); \n                    RotationHelper.rotateModelByQuaternion(this.rotationGuide, rotate); \n                } \n                this.initialMouse = realPos;\n            },\n\n            shouldRotate: function(realPos){\n                return realPos.length() < this.displayRadius;\n            },\n\n            startRotation: function(initialMousePos, dim){\n                this.rotating = true;\n                this.initialMouse = RotationHelper.getRealPosition(initialMousePos[0], initialMousePos[1], dim, this.camera);\n                this.setRotatingGuideOpacity(this.rotatingOpacity);\n            },\n            endRotation: function(){\n                this.rotating = false;\n                this.setRotatingGuideOpacity(this.unhiddenOpacity);\n            },\n\n            cursorType: function(mouseX, mouseY, dim){\n                var realPos = RotationHelper.getRealPosition(mouseX, mouseY, dim, this.camera);\n                if(this.rotating){\n                    return \"grabbing\";\n                }\n                else if(this.shouldRotate(realPos)){\n                    return \"grab\";\n                } else {\n                    return \"\";\n                }\n            },\n\n            hideGuide: function(hide){\n                if(hide){\n                    this.setRotatingGuideOpacity(0);\n                } else {\n                    this.setRotatingGuideOpacity(this.unhiddenOpacity);\n                }\n            },\n\n            setRotatingGuideOpacity: function(opacity){\n                this.rotationGuide.material.opacity = opacity;\n            },\n        };\n        Controller.init(model, scene, camera);\n        return Controller;\n    }};\n});\n"]}