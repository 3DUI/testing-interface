{"version":3,"sources":["src/render_loop.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,UAAS,KAAK,EAAC;AAC7B,WAAO;;AAEH,YAAI,EAAE,cAAS,IAAI,EAAE,UAAU,EAAC;AAC5B,gBAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEjB,gBAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,gBAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,gBAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;;AAE7B,gBAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC;AAC1C,gBAAI,CAAC,UAAU,EAAE,CAAC;AAClB,gBAAI,CAAC,UAAU,CAAC,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAE,CAAC;SAC3D;;;;AAID,eAAO,EAAE,iBAAS,IAAI,EAAE,QAAQ,EAAC;AAC7B,gBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;SAC/B;;AAED,kBAAU,EAAE,oBAAS,IAAI,EAAC;AACtB,gBAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC;AAC/B,uBAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,uBAAO,IAAI,CAAC;aACf;AACD,mBAAO,KAAK,CAAC;SAChB;;;AAGD,kBAAU,EAAE,sBAAU;AAClB,gBAAI,IAAI,GAAG,CAAC,AAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,GAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAClE,AAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,GAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACnF,gBAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,mBAAO,IAAI,CAAC;SACf;;;AAGD,aAAK,EAAE,iBAAU;AACb,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,gBAAI,IAAI,GAAG,IAAI,CAAC;AAChB,gBAAI,MAAM,GAAG,SAAT,MAAM,GAAa;AACnB,oBAAG,IAAI,CAAC,SAAS,EAAC;AACd,wBAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC7B,wBAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACtD,yBAAI,IAAI,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAC;AAC3B,4BAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC;AACnC,gCAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;yBAChE;qBACJ;iBACJ;aACJ,CAAC;AACF,kBAAM,EAAE,CAAC;SACZ;;AAED,YAAI,EAAE,gBAAU;AACZ,gBAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,gCAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC/C;KACJ,CAAC;CACL,CAAC,CAAC","file":"src/render_loop.js","sourcesContent":["define([\"three\"], function(THREE){\n    return {\n        // Instance variables\n        init: function(size, domElement){\n            this.domElement = domElement;\n            this.size = size;\n\n            this.views = {};\n            this.rendering = false;\n            this.animationFrameId = null; // set on start\n\n            this.renderer = new THREE.WebGLRenderer(); \n            this.updateSize();\n            this.domElement.appendChild( this.renderer.domElement );\n        },\n\n        // Add and remove views from being rendered. A view is anything\n        // with a render method that takes a renderer, a width and a height\n        addView: function(name, renderer){\n            this.views[name] = renderer;\n        },\n\n        removeView: function(name){\n            if(this.views.hasOwnProperty(name)){\n                delete this.views[name];\n                return true;\n            }\n            return false;\n        },\n\n        // Update the size of the renderer\n        updateSize: function(){\n            var size = [(this.size.widthScale * window.innerWidth) - this.size.widthOffset, \n                        (this.size.heightScale * window.innerHeight) - this.size.heightOffset];\n            this.renderer.setSize(size[0], size[1]);\n            return size;\n        },\n        \n        // Start and stop rendering\n        start: function(){\n            this.rendering = true;\n            var that = this;\n            var render = function(){\n                if(that.rendering){\n                    var size = that.updateSize();\n                    that.animationFrameId = requestAnimationFrame(render);\n                    for(var viewName in that.views){\n                        if(that.views.hasOwnProperty(viewName)){\n                            that.views[viewName].render(that.renderer, size[0], size[1]);\n                        }\n                    }\n                }\n            };\n            render();\n        },\n\n        stop: function(){\n            this.rendering = false;\n            cancelAnimationFrame(this.animationFrameId);\n        }\n    };\n});\n"]}