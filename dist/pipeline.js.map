{"version":3,"sources":["src/pipeline.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,CAAC,mBAAmB,CAAC,EAAG,UAAS,WAAW,EAAC;AAChD,aAAS,QAAQ,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC;AAClD,YAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACb,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;KACvD;AACD,YAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;AAC9B,YAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,UAAS,KAAK,EAAC;AACpC,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAU;AACtB,iBAAK,CAAC,YAAU;AAAC,oBAAI,CAAC,OAAO,EAAE,CAAA;aAAC,CAAC,CAAC;SACrC,CAAC,CAAC;KACN,CAAC;;AAEF,YAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,YAAU;AACjC,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,SAAS,EAAC;AACxC,gBAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACf,MAAM;AACH,gBAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACvC,gBAAG,KAAK,KAAK,CAAC,EAAC;AACX,oBAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACf,MAAM;AACH,oBAAI,CAAC,SAAS,CAAC,UAAS,KAAK,EAAC;AAC1B,wBAAG,KAAK,EAAC;AACL,4BAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBACf,MAAM;AACH,4BAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACnB;iBACJ,CAAC,CAAC;aACN;SACJ;KACJ,CAAC;;AAEF,YAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,YAAU;AACnC,YAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC3C,YAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACnB,CAAC;;AAEF,YAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,UAAS,KAAK,EAAC;AACpC,cAAM,CAAC,GAAG,CAAC,OAAO,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;AACpD,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AACvC,YAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAClC,YAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7B,YAAG,IAAI,EAAC;AACJ,gBAAI,EAAE,CAAC;SACV,MAAM;AACH,gBAAI,CAAC,SAAS,EAAE,CAAC;AACjB,gBAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;SAClD;KACJ,CAAA;AACD,WAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAClC,WAAO,QAAQ,CAAC;CACnB,CAAC,CAAC","file":"src/pipeline.js","sourcesContent":["define([\"dist/local_object\"],  function(LocalObject){\n    function Pipeline(id, finalNode, resetPage, overwrite){\n        this.id = id;\n        this.finalNode = finalNode;\n        this.resetPage = resetPage;\n        this.indexObj = new LocalObject(this.id, overwrite);\n    }\n    Pipeline.prototype.nodes = [];\n    Pipeline.prototype.add = function(runFn){\n        var that = this;\n        this.nodes.push(function(){\n            runFn(function(){that.runNext()});\n        });\n    };\n\n    Pipeline.prototype.start = function(){\n        var that = this;\n        if(this.indexObj.get(\"index\") === undefined){\n            this.run(0);\n        } else {\n            var index = that.indexObj.get(\"index\");\n            if(index === 0){\n                this.run(0);\n            } else {\n                this.resetPage(function(reset){\n                    if(reset){\n                        that.run(0);\n                    } else {\n                        that.run(index);\n                    }\n                });\n            }\n        }\n    };\n\n    Pipeline.prototype.runNext = function(){\n        var index = this.indexObj.get(\"index\") + 1;\n        this.run(index);\n    };\n\n    Pipeline.prototype.run = function(index){\n        window.log.saveLog(\"running pipeline index\", index);\n        window.log.meta.pipeline_index = index;\n        this.indexObj.set(\"index\", index); \n        var node = this.nodes[index];\n        if(node){\n            node();\n        } else {\n            this.finalNode();\n            this.indexObj = new LocalObject(this.id, true);\n        }\n    }\n    console.log(\"pipeline\", Pipeline);\n    return Pipeline;\n});\n"]}